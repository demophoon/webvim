<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Britt Gresham's Vim Configurations</title>

    <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic,700italic' rel='stylesheet' type='text/css'>

    <style>
        html {
            background: #121212;
            padding: 0px;
            margin: 0px;
            overflow: hidden;
        }

        h1 {
            margin-bottom: 20px;
            font: 20px/1.5 sans-serif;
        }

        .terminal {
            padding: 5px;
            font-family: "Ubuntu Mono", "DejaVu Sans Mono", "Liberation Mono", monospace;
            font-size: 16px;
            color: #f0f0f0;
            background: #121212 !important;
        }

        .terminal a, .terminal a:hover, .terminal a:active, .terminal a:visited {
            color: #ffffff;
        }

        .terminal-cursor {
            color: #000;
            background: #f0f0f0;
        }
    </style>

    <script type="text/javascript" charset="utf-8" src="/static/js/term.js"></script>
    <script type="text/javascript" charset="utf-8" src="/static/js/autolink-min.js"></script>
    <script type="text/javascript" src="http://cdn.brittg.com/js/jquery.js"></script>
    <script src="http://cdn.sockjs.org/sockjs-0.3.min.js"></script>

    </head>
    <body>


        <div id="vim_terminal"></div>

        <script type="text/javascript" charset="utf-8">

            (function() {
                var sock;
                var term;
                var connected = false;

                function connect_to_ws() {
                    sock = new SockJS('/terminal');
                    sock.onopen = function() {
                        term.fixResize();
                        sock.ready = true;
                    };
                    sock.onmessage = function(e) {
                        if (e.data) {
                            term.write(e.data);
                            term.urlify();
                        }
                    };
                    sock.onclose = function() {
                        sock.ready = false;
                    };
                    sock.keepAlive = setInterval(function() {
                        if (sock.ready) {
                            sock.send(" ");
                        }
                    }, 5000);

                }

                function init() {
                    term = new Terminal({
                        cols: Math.floor((window.innerWidth - 24) / 8) - 2,
                        rows: Math.floor((window.innerHeight - 48) / 16) - 2,
                        screenKeys: true,
                    });
                    term.open(document.getElementById("vim_terminal"));
                    term.on('data', function(data) {
                        if (!connected) {
                            connected = true;
                            connect_to_ws();
                        }
                        sock.send("0" + data);
                        setTimeout(function() {
                            sock.send(" ");
                        }, 100);
                    });
                    term._resize = term.resize;
                    term.resize = function(x, y) {
                        term._resize(x, y);
                        sock.send("1" + x + "," + y);
                    }
                    term.fixResize = function() {
                        var cols = Math.floor((window.innerWidth - 24) / 8);
                        var rows = Math.floor((window.innerHeight - 48) / 16);
                        term.resize(cols, rows)
                    }
                    term.urlify = function() {
                        $("span").each(function(inxex, element) {
                            if (element.innerText.indexOf("|") == -1) {
                                element.innerHTML = element.innerText.autoLink({target: "_blank"});
                            }
                        });
                    }

                    term.write("root@brittg.sexy:/# vim -Z ./README.txt");

                    setTimeout(function(){
                        $.ajax({
                            url: "/static/default.txt",
                            success: function(data) {
                                term.write(data);
                                term.urlify();
                            },
                        });
                    }, 100);

                    var rtime = new Date(1, 1, 2000, 12,00,00);
                    var timeout = false;
                    var delta = 200;
                    $(window).resize(function() {
                        rtime = new Date();
                        if (timeout === false) {
                            timeout = true;
                            setTimeout(resizeend, delta);
                        }
                    });
                    function resizeend() {
                        if (new Date() - rtime < delta) {
                            setTimeout(resizeend, delta);
                        } else {
                            timeout = false;
                            term.fixResize();
                        }
                    }

                }

                console.log("====================================");
                console.log("Ahh, so you are interested in how things work? Press G in Vim to go to the last few paragraphs to");
                console.log("find out how this was pulled off. Also don't forget to checkout the repository for more information");
                console.log("https://github.com/demophoon/webvim");
                console.log("Also don't forget to check out my website! http://www.brittg.com/ Thanks :) -- Britt Gresham");
                console.log("====================================");
                $(document).ready(init);
            }());

        </script>

        <script type="text/javascript">

            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-34543516-1']);
            _gaq.push(['_setDomainName', 'brittg.com']);
            _gaq.push(['_setAllowLinker', true]);
            _gaq.push(['_trackPageview']);

            (function() {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
            })();

        </script>

    </body>
</html>
